"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useReducer = void 0;
const state_1 = require("./state");
const decorator_1 = require("./decorator");
const useReducer = (element, reducer, defaultValue, options = {}) => {
    const { get: getState, set } = (0, state_1.useState)(element, defaultValue, options);
    const subscribers = [];
    const dispatch = (action, payload) => __awaiter(void 0, void 0, void 0, function* () {
        const reducers = reducer(getState());
        if (reducers[action]) {
            yield set(yield reducers[action](payload));
            subscribers.forEach(subscriber => subscriber(action, getState()));
            options.dispatchEvent &&
                element.dispatchEvent(new CustomEvent(action, { detail: getState() }));
        }
        return getState();
    });
    return (0, decorator_1.withReducer)(element, {
        get: getState,
        subscribe: (onChange) => subscribers.push(onChange),
        when: (action, onChange) => subscribers.push((triggeredAction, state) => triggeredAction === action && onChange(state)),
        set: dispatch,
        dispatch
    });
};
exports.useReducer = useReducer;
//# sourceMappingURL=reducer.js.map